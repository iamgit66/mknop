name: OpenWrt-CI

on:
  schedule:
    - cron: '0 22 * * 5'
  workflow_dispatch:
    inputs:
      ssh:
        description: 'SSH connection to Actions'
        required: false
        default: 'false'
 
env:
  TZ: 'Asia/Shanghai'

jobs:
  build:
    runs-on: ubuntu-18.04

    steps:
      - name: Checkout
        uses: actions/checkout@main

      - name: Install depends
        run: |
          docker rmi `docker images -q`
          sudo rm -rf /etc/apt/sources.list.d/* /usr/share/dotnet /usr/local/lib/android /usr/lib/jvm /opt/ghc
          sudo -E apt-get -qq update
          sudo -E apt-get -qq install $(curl -fsSL git.io/depends-ubuntu-1804)
          sudo -E apt-get -qq autoremove --purge
          sudo -E apt-get -qq clean
          sudo timedatectl set-timezone $TZ

      - name: Clone Lean's openwrt
        run: |
          git clone https://github.com/coolsnowwolf/lede

      - name: Install feeds & Make config
        env:
          CONFIG: '.github/config'
        run: |
          chmod +x $CONFIG
          ./$CONFIG

    - name: SSH connection to Actions
      uses: P3TERX/ssh2actions@v1.0.0
      if: (github.event.inputs.ssh == 'true' && github.event.inputs.ssh  != 'false') || contains(github.event.action, 'ssh')
      env:
        TELEGRAM_CHAT_ID: ${{ secrets.TELEGRAM_CHAT_ID }}
        TELEGRAM_BOT_TOKEN: ${{ secrets.TELEGRAM_BOT_TOKEN }}

      - name: Compile openwrt
        run: |
          cd lede
          make defconfig
          make download -j8
          make -j$(nproc) || make -j1 V=s

      - name: Build firmware
        run: |
          cp lede/bin/targets/*/*/*.tar.gz ./openwrt
          sudo ./gen_openwrt -d -k latest -m phicomm-n1
          
          devices=("phicomm-n1")
          cd out
          for x in ${devices[*]}; do
            cd $x
            filename=$(ls | awk -F '.img' '{print $1}')
            gzip *.img
            cd ../
            echo "firmware_$x=$filename" >> $GITHUB_ENV
          done

      - name: Upload firmware @ phicomm n1
        uses: actions/upload-artifact@main
        with:
          name: ${{ env.firmware_phicomm-n1 }}
          path: out/phicomm-n1
